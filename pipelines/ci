pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'my-docker-registry'
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials' // Jenkins credentials ID for Docker Hub
        GIT_REPO_URL = 'https://github.com/RanaEssam03/Library-Management-System' // Replace with your GitHub repo URL
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from GitHub
                checkout([
                    $class: 'GitSCM',
                    userRemoteConfigs: [[
                        url: GIT_REPO_URL,
                       
                    ]]
                ])
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Build Docker images using docker-compose
                    sh 'cat docker-compose.yml'
                    sh 'ls'
                    sh 'ls  ./backend/'
                    sh 'cat ./frontend/Dockerfile'
                
                    sh 'docker-compose --verbose build'
                }
            }
        }

        stage('Tag and Push Images') {
            steps {
                script {
                    // Log in to Docker Hub
                    docker.withRegistry("https://index.docker.io/v1/", DOCKER_CREDENTIALS_ID) {
                        // Tag and push backend image
                        sh 'docker tag my-backend:latest $DOCKER_REGISTRY/my-backend:latest'
                        sh 'docker push $DOCKER_REGISTRY/my-backend:latest'

                        // Tag and push frontend image
                        sh 'docker tag my-frontend:latest $DOCKER_REGISTRY/my-frontend:latest'
                        sh 'docker push $DOCKER_REGISTRY/my-frontend:latest'
                    }
                }
            }
        }
    }
    post {
        always {
            // Clean workspace
            cleanWs()
        }
    }
}